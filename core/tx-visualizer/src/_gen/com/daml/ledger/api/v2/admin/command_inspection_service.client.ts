// @generated by protobuf-ts 2.11.1 with parameter generate_dependencies
// @generated from protobuf file "com/daml/ledger/api/v2/admin/command_inspection_service.proto" (package "com.daml.ledger.api.v2.admin", syntax proto3)
// tslint:disable
//
// Copyright (c) 2025 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
// SPDX-License-Identifier: Apache-2.0
//
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { CommandInspectionService } from "./command_inspection_service";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { GetCommandStatusResponse } from "./command_inspection_service";
import type { GetCommandStatusRequest } from "./command_inspection_service";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * Status: experimental interface, will change before it is deemed production
 * ready
 *
 * The inspection service provides methods for the ledger administrator
 * to look under the hood of a running system.
 * In V2 Ledger API this service is not available.
 *
 * @generated from protobuf service com.daml.ledger.api.v2.admin.CommandInspectionService
 */
export interface ICommandInspectionServiceClient {
    /**
     * Inquire about the status of a command.
     * This service is used for debugging only. The command status is only tracked in memory and is not persisted.
     * The service can be used to understand the failure status and the structure of a command.
     * Requires admin privileges
     * The service is alpha without backward compatibility guarantees.
     *
     * @generated from protobuf rpc: GetCommandStatus
     */
    getCommandStatus(input: GetCommandStatusRequest, options?: RpcOptions): UnaryCall<GetCommandStatusRequest, GetCommandStatusResponse>;
}
/**
 * Status: experimental interface, will change before it is deemed production
 * ready
 *
 * The inspection service provides methods for the ledger administrator
 * to look under the hood of a running system.
 * In V2 Ledger API this service is not available.
 *
 * @generated from protobuf service com.daml.ledger.api.v2.admin.CommandInspectionService
 */
export class CommandInspectionServiceClient implements ICommandInspectionServiceClient, ServiceInfo {
    typeName = CommandInspectionService.typeName;
    methods = CommandInspectionService.methods;
    options = CommandInspectionService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * Inquire about the status of a command.
     * This service is used for debugging only. The command status is only tracked in memory and is not persisted.
     * The service can be used to understand the failure status and the structure of a command.
     * Requires admin privileges
     * The service is alpha without backward compatibility guarantees.
     *
     * @generated from protobuf rpc: GetCommandStatus
     */
    getCommandStatus(input: GetCommandStatusRequest, options?: RpcOptions): UnaryCall<GetCommandStatusRequest, GetCommandStatusResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetCommandStatusRequest, GetCommandStatusResponse>("unary", this._transport, method, opt, input);
    }
}
