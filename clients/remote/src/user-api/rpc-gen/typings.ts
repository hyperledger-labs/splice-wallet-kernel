// Code generated by rpc-generator DO NOT EDIT!!

export type StringDoaGddGA = string
export interface AddNetworkParams {
    [key: string]: any
}
export interface AllocatePartyParams {
    hint: StringDoaGddGA
    [k: string]: any
}
export interface RemovePartyParams {
    hint: StringDoaGddGA
    [k: string]: any
}
export interface SignParams {
    data: StringDoaGddGA
    party?: StringDoaGddGA
    [k: string]: any
}
export interface ExecuteParams {
    signature: StringDoaGddGA
    party: StringDoaGddGA
    signedBy: StringDoaGddGA
    [k: string]: any
}
/**
 *
 * Represents a null value, used in responses where no data is returned.
 *
 */
export type Null = any
export interface AllocatePartyResult {
    [key: string]: any
}
export interface RemovePartyResult {
    [key: string]: any
}
export interface SignResult {
    signature: StringDoaGddGA
    party: StringDoaGddGA
    signedBy: StringDoaGddGA
    [k: string]: any
}
export interface ExecuteResult {
    correlationId: StringDoaGddGA
    traceId: StringDoaGddGA
    [k: string]: any
}
/**
 *
 * Generated! Represents an alias to any of the provided schemas
 *
 */
export type AnyOfAddNetworkParamsAllocatePartyParamsRemovePartyParamsSignParamsExecuteParamsNullAllocatePartyResultRemovePartyResultSignResultExecuteResult =

        | AddNetworkParams
        | AllocatePartyParams
        | RemovePartyParams
        | SignParams
        | ExecuteParams
        | Null
        | AllocatePartyResult
        | RemovePartyResult
        | SignResult
        | ExecuteResult
export type AddNetwork = (network: AddNetworkParams) => Promise<Null>
export type AllocateParty = (
    params: AllocatePartyParams
) => Promise<AllocatePartyResult>
export type RemoveParty = (
    params: RemovePartyParams
) => Promise<RemovePartyResult>
export type Sign = (params: SignParams) => Promise<SignResult>
export type Execute = (params: ExecuteParams) => Promise<ExecuteResult>
